# Makefile.in generated by automake 1.15 from Makefile.am.
# ui/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile.am
# Automake file for the common-to-all-toolkits user interface routines
# for Wireshark
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Makefile.common
#     Contains the stuff from Makefile.am and Makefile.nmake that is
#     a) common to both files and
#     b) portable between both files
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Makefile.am.inc
# Include file for Makefile.am files to get additional rules
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/wireshark
pkgincludedir = $(includedir)/wireshark
pkglibdir = $(libdir)/wireshark
pkglibexecdir = $(libexecdir)/wireshark
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = ui
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/aclocal-fallback/glib-2.0.m4 \
	$(top_srcdir)/aclocal-fallback/gtk-2.0.m4 \
	$(top_srcdir)/aclocal-fallback/gtk-3.0.m4 \
	$(top_srcdir)/aclocal-fallback/libgcrypt.m4 \
	$(top_srcdir)/aclocal-fallback/libsmi.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = doxygen.cfg
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libui_a_AR = $(AR) $(ARFLAGS)
libui_a_LIBADD =
am__objects_1 = libui_a-alert_box.$(OBJEXT) libui_a-capture.$(OBJEXT) \
	libui_a-capture_ui_utils.$(OBJEXT) libui_a-console.$(OBJEXT) \
	libui_a-decode_as_utils.$(OBJEXT) \
	libui_a-export_object.$(OBJEXT) \
	libui_a-export_object_dicom.$(OBJEXT) \
	libui_a-export_object_http.$(OBJEXT) \
	libui_a-export_object_smb.$(OBJEXT) \
	libui_a-export_object_tftp.$(OBJEXT) libui_a-filters.$(OBJEXT) \
	libui_a-follow.$(OBJEXT) libui_a-iface_lists.$(OBJEXT) \
	libui_a-io_graph_item.$(OBJEXT) libui_a-language.$(OBJEXT) \
	libui_a-help_url.$(OBJEXT) libui_a-mcast_stream.$(OBJEXT) \
	libui_a-packet_list_utils.$(OBJEXT) \
	libui_a-persfilepath_opt.$(OBJEXT) \
	libui_a-preference_utils.$(OBJEXT) libui_a-profile.$(OBJEXT) \
	libui_a-proto_hier_stats.$(OBJEXT) libui_a-recent.$(OBJEXT) \
	libui_a-rtp_media.$(OBJEXT) libui_a-rtp_stream.$(OBJEXT) \
	libui_a-service_response_time.$(OBJEXT) \
	libui_a-software_update.$(OBJEXT) \
	libui_a-ssl_key_export.$(OBJEXT) \
	libui_a-tap_export_pdu.$(OBJEXT) \
	libui_a-tap-iax2-analysis.$(OBJEXT) \
	libui_a-tap-rlc-graph.$(OBJEXT) \
	libui_a-tap-rtp-common.$(OBJEXT) \
	libui_a-tap-sctp-analysis.$(OBJEXT) \
	libui_a-tap-sequence-analysis.$(OBJEXT) \
	libui_a-tap-tcp-stream.$(OBJEXT) libui_a-text_import.$(OBJEXT) \
	libui_a-time_shift.$(OBJEXT) \
	libui_a-traffic_table_ui.$(OBJEXT) libui_a-util.$(OBJEXT) \
	libui_a-voip_calls.$(OBJEXT)
am__objects_2 =
am_libui_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_2) $(am__objects_2)
libui_a_OBJECTS = $(am_libui_a_OBJECTS)
libui_dirty_a_AR = $(AR) $(ARFLAGS)
libui_dirty_a_LIBADD =
am__objects_3 = text_import_scanner.$(OBJEXT)
am_libui_dirty_a_OBJECTS = $(am__objects_3)
libui_dirty_a_OBJECTS = $(am_libui_dirty_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libui_a_SOURCES) $(libui_dirty_a_SOURCES)
DIST_SOURCES = $(libui_a_SOURCES) $(libui_dirty_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/../Makefile.am.inc \
	$(srcdir)/Makefile.common $(srcdir)/Makefile.in \
	$(srcdir)/doxygen.cfg.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
A2X = 
ACLOCAL = ${SHELL} /home/simula/mibase/mobileinsight/wireshark-2.0.13/missing aclocal-1.15
AC_MIN_VERSION = 2.60
ADNS_LIBS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
APPLICATIONSERVICES_FRAMEWORKS = 
AR = ar
AUTOCONF = ${SHELL} /home/simula/mibase/mobileinsight/wireshark-2.0.13/missing autoconf
AUTOHEADER = ${SHELL} /home/simula/mibase/mobileinsight/wireshark-2.0.13/missing autoheader
AUTOMAKE = ${SHELL} /home/simula/mibase/mobileinsight/wireshark-2.0.13/missing automake-1.15
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS =  -Wall -W -Wextra -Wendif-labels -Wpointer-arith -Warray-bounds -Wformat-security -fwrapv -fno-strict-overflow -fno-delete-null-pointer-checks -Wvla -Waddress -Wattributes -Wdiv-by-zero -Wignored-qualifiers -Wpragmas -Wno-overlength-strings -Wwrite-strings -Wno-long-long -Wunused-const-variable -Wc++-compat -Wdeclaration-after-statement -Wshadow -Wno-pointer-sign -Wold-style-definition -Wstrict-prototypes -Wlogical-op -Wjump-misses-init -fexcess-precision=fast -fvisibility=hidden -g -O2 -pthread -isystem/usr/include/glib-2.0 -isystem/usr/lib/x86_64-linux-gnu/glib-2.0/include
CFLAGS_FOR_BUILD =  -Wall -W -Wextra -Wendif-labels -Wpointer-arith -Warray-bounds -Wformat-security -fwrapv -fno-strict-overflow -fno-delete-null-pointer-checks -Wvla -Waddress -Wattributes -Wdiv-by-zero -Wignored-qualifiers -Wpragmas -Wno-overlength-strings -Wwrite-strings -Wno-long-long -Wunused-const-variable -Wc++-compat -Wdeclaration-after-statement -Wshadow -Wno-pointer-sign -Wold-style-definition -Wstrict-prototypes -Wlogical-op -Wjump-misses-init -fexcess-precision=fast -fvisibility=hidden -fPIE -msse4.2
CFLAGS_SSE42 = -msse4.2
CONFIG_ARGS = --disable-wireshark
COREFOUNDATION_FRAMEWORKS = 
CPP = gcc -E
CPPFLAGS = -DG_DISABLE_DEPRECATED -DG_DISABLE_SINGLE_INCLUDES  -D_FORTIFY_SOURCE=2 -I/usr/local/include -I/usr/include '-DPLUGIN_INSTALL_DIR="$(plugindir)"'
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -Wall -W -Wextra -Wendif-labels -Wpointer-arith -Warray-bounds -Wformat-security -fwrapv -fno-strict-overflow -fno-delete-null-pointer-checks -Wvla -Waddress -Wattributes -Wdiv-by-zero -Wignored-qualifiers -Wpragmas -Wno-overlength-strings -Wwrite-strings -Wno-long-long -Wunused-const-variable -fexcess-precision=fast -fvisibility=hidden -g -O2 -pthread -isystem/usr/include/glib-2.0 -isystem/usr/lib/x86_64-linux-gnu/glib-2.0/include
CYGPATH_W = echo
C_ARES_LIBS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DESKTOP_FILE_INSTALL = /usr/bin/desktop-file-install
DLLTOOL = false
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
DUMPCAP_GROUP = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_STATIC = 
EXEEXT = 
FGREP = /bin/grep -F
FLOORL_LO = 
FOP = 
GEOIP_LIBS = 
GETOPT_LO = 
GLIB_CFLAGS = -pthread -isystem/usr/include/glib-2.0 -isystem/usr/lib/x86_64-linux-gnu/glib-2.0/include
GLIB_COMPILE_RESOURCES = glib-compile-resources
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -lgthread-2.0 -pthread -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0
GLIB_MIN_VERSION = 2.16.0
GLIB_MKENUMS = glib-mkenums
GOBJECT_QUERY = gobject-query
GREP = /bin/grep
GTK2_MIN_VERSION = 2.12.0
GTK3_MIN_VERSION = 3.0.0
GTK_CFLAGS = 
GTK_LIBS = 
GUI_CONFIGURE_FLAGS = 
HAVE_A2X = no
HAVE_BLESS = no
HAVE_DOXYGEN = no
HAVE_DPKG_BUILDPACKAGE = yes
HAVE_FOP = no
HAVE_HDIUTIL = no
HAVE_LYNX = no
HAVE_OSX_PACKAGING = no
HAVE_PKGMK = no
HAVE_PKGPROTO = no
HAVE_PKGTRANS = no
HAVE_RPM = yes
HAVE_SVR4_PACKAGING = no
HAVE_W3M = no
HAVE_XCODEBUILD = no
HAVE_XMLLINT = no
HAVE_XSLTPROC = no
HTML_VIEWER = /usr/bin/xdg-open
INET_ATON_LO = 
INET_NTOP_LO = 
INET_PTON_LO = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KRB5_CONFIG = 
KRB5_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  -Wl,--as-needed -L/usr/local/lib -L/usr/local/lib -L/usr/local/lib -L/usr/local/lib -L/usr/local/lib
LDFLAGS_SHAREDLIB = 
LEX = /usr/bin/flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBCAP_LIBS = 
LIBGCRYPT_CFLAGS = 
LIBGCRYPT_CONFIG = no
LIBGCRYPT_LIBS = 
LIBGNUTLS_CFLAGS = 
LIBGNUTLS_LIBS = 
LIBNL1_CFLAGS = 
LIBNL1_LIBS = 
LIBNL2_CFLAGS = 
LIBNL2_LIBS = 
LIBNL3_CFLAGS = 
LIBNL3_LIBS = 
LIBOBJS = 
LIBS = -lz -lm 
LIBSMI_CFLAGS = 
LIBSMI_LDFLAGS = 
LIBSMI_VERSION = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LUA_CFLAGS = 
LUA_LIBS = 
LYNX = 
MAKEINFO = ${SHELL} /home/simula/mibase/mobileinsight/wireshark-2.0.13/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MOC = 
NM = /usr/bin/nm -B
NMEDIT = 
NSL_LIBS = 
OBJDUMP = objdump
OBJEXT = o
OSX_APP_FLAGS = 
OSX_DMG_FLAGS = 
OSX_MIN_VERSION = 
OTOOL = 
OTOOL64 = 
PACKAGE = wireshark
PACKAGE_BUGREPORT = http://bugs.wireshark.org/
PACKAGE_NAME = wireshark
PACKAGE_STRING = wireshark 2.0.13
PACKAGE_TARNAME = wireshark
PACKAGE_URL = http://www.wireshark.org/
PACKAGE_VERSION = 2.0.13
PATH_SEPARATOR = :
PCAP_CONFIG = /usr/bin/pcap-config
PCAP_LIBS = -lpcap
PERL = /usr/bin/perl
PIE_CFLAGS = -fPIE
PIE_LDFLAGS = -pie
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLUGIN_LIBS = 
POD2HTML = /usr/bin/pod2html
POD2MAN = /usr/bin/pod2man
POPCOUNT_LO = popcount.lo
PORTAUDIO_INCLUDES = 
PORTAUDIO_LIBS = 
PYTHON = /usr/bin/python
QTCHOOSER = 
QT_MIN_VERSION = 4.7.0
Qt_LDFLAGS = 
Qt_LIBS = 
RANLIB = ranlib
RCC = 
RPMBUILD_WITH_ARGS = --without gtk2 --without gtk3 --without qt --without qt5 --without lua
SBC_CFLAGS = 
SBC_LIBS = 
SED = /bin/sed
SETCAP = /sbin/setcap
SET_MAKE = 
SHELL = /bin/bash
SOCKET_LIBS = 
SSL_LIBS = 
STRIP = strip
STRPTIME_LO = 
SYSTEMCONFIGURATION_FRAMEWORKS = 
UIC = 
VERSION = 2.0.13
W3M = 
XMLLINT = 
XSLTPROC = 
YACC = bison -y
YACCDUMMY = /usr/bin/bison
YFLAGS = 
abs_builddir = /home/simula/mibase/mobileinsight/wireshark-2.0.13/ui
abs_srcdir = /home/simula/mibase/mobileinsight/wireshark-2.0.13/ui
abs_top_builddir = /home/simula/mibase/mobileinsight/wireshark-2.0.13
abs_top_srcdir = /home/simula/mibase/mobileinsight/wireshark-2.0.13
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_cv_wireshark_have_rpm = yes
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
androiddump_bin = androiddump$(EXEEXT)
androiddump_man = androiddump.1
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
capinfos_bin = capinfos$(EXEEXT)
capinfos_man = capinfos.1
captype_bin = captype$(EXEEXT)
captype_man = captype.1
datadir = ${datarootdir}
datarootdir = ${prefix}/share
dftest_bin = dftest$(EXEEXT)
dftest_man = dftest.1
docdir = /usr/local/share/doc/wireshark
dumpcap_bin = dumpcap$(EXEEXT)
dumpcap_man = dumpcap.1
dvidir = ${docdir}
echld_dir = 
echld_test_bin = 
editcap_bin = editcap$(EXEEXT)
editcap_man = editcap.1
exec_prefix = ${prefix}
extcapdir = ${datadir}/wireshark/extcap/
have_sw_vers = no
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/simula/mibase/mobileinsight/wireshark-2.0.13/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mergecap_bin = mergecap$(EXEEXT)
mergecap_man = mergecap.1
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
plugindir = ${libdir}/wireshark/plugins/${VERSION}
plugins_dir = plugins
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
randpkt_bin = randpkt$(EXEEXT)
randpkt_man = randpkt.1
rawshark_bin = rawshark$(EXEEXT)
rawshark_man = rawshark.1
reordercap_bin = reordercap$(EXEEXT)
reordercap_man = reordercap.1
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
text2pcap_bin = text2pcap$(EXEEXT)
text2pcap_man = text2pcap.1
tfshark_bin = 
tfshark_man = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
tshark_bin = tshark$(EXEEXT)
tshark_man = tshark.1
wireshark_SUBDIRS = 
wireshark_bin = 
wireshark_man = 
wiresharkfilter_man = wireshark-filter.4

# Generated header files that we want in the distribution.
GENERATED_HEADER_FILES = \
	text_import_scanner_lex.h


# Generated C source files that we want in the distribution.
GENERATED_C_FILES = 
DIRTY_GENERATED_C_FILES = \
	text_import_scanner.c


# All the generated files we want in the distribution.
GENERATED_FILES = \
	$(GENERATED_HEADER_FILES) \
	$(GENERATED_C_FILES) \
	$(DIRTY_GENERATED_C_FILES)


# Files that generate compileable files
GENERATOR_FILES = \
	text_import_scanner.l

WIRESHARK_UI_SRC = \
	alert_box.c		\
	capture.c		\
	capture_ui_utils.c	\
	console.c		\
	decode_as_utils.c	\
	export_object.c		\
	export_object_dicom.c	\
	export_object_http.c	\
	export_object_smb.c	\
	export_object_tftp.c	\
	filters.c		\
	follow.c		\
	iface_lists.c		\
	io_graph_item.c		\
	language.c		\
	help_url.c		\
	mcast_stream.c		\
	packet_list_utils.c	\
	persfilepath_opt.c	\
	preference_utils.c	\
	profile.c		\
	proto_hier_stats.c	\
	recent.c		\
	rtp_media.c		\
	rtp_stream.c		\
	service_response_time.c	\
	software_update.c	\
	ssl_key_export.c	\
	tap_export_pdu.c	\
	tap-iax2-analysis.c	\
	tap-rlc-graph.c	\
	tap-rtp-common.c	\
	tap-sctp-analysis.c \
	tap-sequence-analysis.c	\
	tap-tcp-stream.c	\
	text_import.c		\
	time_shift.c		\
	traffic_table_ui.c	\
	util.c			\
	voip_calls.c

noinst_HEADERS = \
	alert_box.h		\
	all_files_wildcard.h	\
	capture.h		\
	capture_globals.h	\
	capture_ui_utils.h	\
	console.h		\
	decode_as_utils.h	\
	export_object.h		\
	last_open_dir.h		\
	file_dialog.h		\
	filters.h		\
	follow.h		\
	help_url.h		\
	packet_list_utils.h	\
	iface_lists.h		\
	io_graph_item.h		\
	language.h		\
	mcast_stream.h		\
	main_statusbar.h	\
	persfilepath_opt.h	\
	preference_utils.h	\
	profile.h		\
	progress_dlg.h		\
	proto_hier_stats.h	\
	recent.h		\
	recent_utils.h		\
	rtp_media.h		\
	rtp_stream.h		\
	service_response_time.h	\
	simple_dialog.h		\
	software_update.h	\
	ssl_key_export.h	\
	tap_export_pdu.h	\
	tap-iax2-analysis.h	\
	tap-rlc-graph.h	\
	tap-rtp-analysis.h	\
	tap-rtp-common.h	\
	tap-sctp-analysis.h  \
	tap-sequence-analysis.h	\
	tap-tcp-stream.h	\
	text_import.h		\
	text_import_scanner.h	\
	time_shift.h		\
	traffic_table_ui.h	\
	ui_util.h		\
	util.h			\
	voip_calls.h

AUTOMAKE_OPTIONS = -Wno-portability
AM_V_AWK = $(am__v_AWK_$(V))
am__v_AWK_ = $(am__v_AWK_$(AM_DEFAULT_VERBOSITY))
am__v_AWK_0 = @echo "  AWK     " $@;
AM_V_LEMON = $(am__v_LEMON_$(V))
am__v_LEMON_ = $(am__v_LEMON_$(AM_DEFAULT_VERBOSITY))
am__v_LEMON_0 = @echo "  LEMON   " $@;
AM_V_RUNLEX = $(am__v_RUNLEX_$(V))
am__v_RUNLEX_ = $(am__v_RUNLEX_$(AM_DEFAULT_VERBOSITY))
am__v_RUNLEX_0 = @echo "  RUNLEX  " $@;
AM_V_SED = $(am__v_SED_$(V))
am__v_SED_ = $(am__v_SED_$(AM_DEFAULT_VERBOSITY))
am__v_SED_0 = @echo "  SED     " $@;

# abi-compliance-checker descriptor
INCLUDE_DIRS = $(subst -I,NEWLINE,$(filter -I%, $(CFLAGS) -I$(abs_top_srcdir) -I$(abs_srcdir)))
#AM_CLEAN_CFLAGS = -Werror
noinst_LIBRARIES = libui.a libui_dirty.a
CLEANFILES = \
	doxygen-ui.tag	\
	libui.a		\
	libui_dirty.a	\
	*~

MAINTAINERCLEANFILES = \
	$(GENERATED_FILES)	\
	Makefile.in

RUNLEX = $(top_srcdir)/tools/runlex.sh

# All sources that should be put in the source distribution tarball
libui_a_SOURCES = \
	$(WIRESHARK_UI_SRC) \
	$(noinst_HEADERS) \
	$(GENERATED_HEADER_FILES) \
	$(GENERATED_C_FILES)

libui_a_CFLAGS = $(AM_CLEAN_CFLAGS)
libui_a_DEPENDENCIES = 
libui_dirty_a_SOURCES = \
	$(DIRTY_GENERATED_C_FILES)

libui_dirty_a_DEPENDENCIES = 

# Common headers
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/wiretap $(LIBGCRYPT_CFLAGS) $(LIBGNUTLS_CFLAGS) $(PORTAUDIO_INCLUDES)
EXTRA_DIST = \
	$(GENERATOR_FILES)		\
	CMakeLists.txt			\
	doxygen.cfg.in			\
	Makefile.common			\
	Makefile.nmake

all: all-am

.SUFFIXES:
.SUFFIXES: .c .def .l .lo .o .obj .sym
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.common $(srcdir)/../Makefile.am.inc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu ui/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu ui/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.common $(srcdir)/../Makefile.am.inc $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
doxygen.cfg: $(top_builddir)/config.status $(srcdir)/doxygen.cfg.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libui.a: $(libui_a_OBJECTS) $(libui_a_DEPENDENCIES) $(EXTRA_libui_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libui.a
	$(AM_V_AR)$(libui_a_AR) libui.a $(libui_a_OBJECTS) $(libui_a_LIBADD)
	$(AM_V_at)$(RANLIB) libui.a

libui_dirty.a: $(libui_dirty_a_OBJECTS) $(libui_dirty_a_DEPENDENCIES) $(EXTRA_libui_dirty_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libui_dirty.a
	$(AM_V_AR)$(libui_dirty_a_AR) libui_dirty.a $(libui_dirty_a_OBJECTS) $(libui_dirty_a_LIBADD)
	$(AM_V_at)$(RANLIB) libui_dirty.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libui_a-alert_box.Po
include ./$(DEPDIR)/libui_a-capture.Po
include ./$(DEPDIR)/libui_a-capture_ui_utils.Po
include ./$(DEPDIR)/libui_a-console.Po
include ./$(DEPDIR)/libui_a-decode_as_utils.Po
include ./$(DEPDIR)/libui_a-export_object.Po
include ./$(DEPDIR)/libui_a-export_object_dicom.Po
include ./$(DEPDIR)/libui_a-export_object_http.Po
include ./$(DEPDIR)/libui_a-export_object_smb.Po
include ./$(DEPDIR)/libui_a-export_object_tftp.Po
include ./$(DEPDIR)/libui_a-filters.Po
include ./$(DEPDIR)/libui_a-follow.Po
include ./$(DEPDIR)/libui_a-help_url.Po
include ./$(DEPDIR)/libui_a-iface_lists.Po
include ./$(DEPDIR)/libui_a-io_graph_item.Po
include ./$(DEPDIR)/libui_a-language.Po
include ./$(DEPDIR)/libui_a-mcast_stream.Po
include ./$(DEPDIR)/libui_a-packet_list_utils.Po
include ./$(DEPDIR)/libui_a-persfilepath_opt.Po
include ./$(DEPDIR)/libui_a-preference_utils.Po
include ./$(DEPDIR)/libui_a-profile.Po
include ./$(DEPDIR)/libui_a-proto_hier_stats.Po
include ./$(DEPDIR)/libui_a-recent.Po
include ./$(DEPDIR)/libui_a-rtp_media.Po
include ./$(DEPDIR)/libui_a-rtp_stream.Po
include ./$(DEPDIR)/libui_a-service_response_time.Po
include ./$(DEPDIR)/libui_a-software_update.Po
include ./$(DEPDIR)/libui_a-ssl_key_export.Po
include ./$(DEPDIR)/libui_a-tap-iax2-analysis.Po
include ./$(DEPDIR)/libui_a-tap-rlc-graph.Po
include ./$(DEPDIR)/libui_a-tap-rtp-common.Po
include ./$(DEPDIR)/libui_a-tap-sctp-analysis.Po
include ./$(DEPDIR)/libui_a-tap-sequence-analysis.Po
include ./$(DEPDIR)/libui_a-tap-tcp-stream.Po
include ./$(DEPDIR)/libui_a-tap_export_pdu.Po
include ./$(DEPDIR)/libui_a-text_import.Po
include ./$(DEPDIR)/libui_a-time_shift.Po
include ./$(DEPDIR)/libui_a-traffic_table_ui.Po
include ./$(DEPDIR)/libui_a-util.Po
include ./$(DEPDIR)/libui_a-voip_calls.Po
include ./$(DEPDIR)/text_import_scanner.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libui_a-alert_box.o: alert_box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-alert_box.o -MD -MP -MF $(DEPDIR)/libui_a-alert_box.Tpo -c -o libui_a-alert_box.o `test -f 'alert_box.c' || echo '$(srcdir)/'`alert_box.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-alert_box.Tpo $(DEPDIR)/libui_a-alert_box.Po
#	$(AM_V_CC)source='alert_box.c' object='libui_a-alert_box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-alert_box.o `test -f 'alert_box.c' || echo '$(srcdir)/'`alert_box.c

libui_a-alert_box.obj: alert_box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-alert_box.obj -MD -MP -MF $(DEPDIR)/libui_a-alert_box.Tpo -c -o libui_a-alert_box.obj `if test -f 'alert_box.c'; then $(CYGPATH_W) 'alert_box.c'; else $(CYGPATH_W) '$(srcdir)/alert_box.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-alert_box.Tpo $(DEPDIR)/libui_a-alert_box.Po
#	$(AM_V_CC)source='alert_box.c' object='libui_a-alert_box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-alert_box.obj `if test -f 'alert_box.c'; then $(CYGPATH_W) 'alert_box.c'; else $(CYGPATH_W) '$(srcdir)/alert_box.c'; fi`

libui_a-capture.o: capture.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-capture.o -MD -MP -MF $(DEPDIR)/libui_a-capture.Tpo -c -o libui_a-capture.o `test -f 'capture.c' || echo '$(srcdir)/'`capture.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-capture.Tpo $(DEPDIR)/libui_a-capture.Po
#	$(AM_V_CC)source='capture.c' object='libui_a-capture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-capture.o `test -f 'capture.c' || echo '$(srcdir)/'`capture.c

libui_a-capture.obj: capture.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-capture.obj -MD -MP -MF $(DEPDIR)/libui_a-capture.Tpo -c -o libui_a-capture.obj `if test -f 'capture.c'; then $(CYGPATH_W) 'capture.c'; else $(CYGPATH_W) '$(srcdir)/capture.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-capture.Tpo $(DEPDIR)/libui_a-capture.Po
#	$(AM_V_CC)source='capture.c' object='libui_a-capture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-capture.obj `if test -f 'capture.c'; then $(CYGPATH_W) 'capture.c'; else $(CYGPATH_W) '$(srcdir)/capture.c'; fi`

libui_a-capture_ui_utils.o: capture_ui_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-capture_ui_utils.o -MD -MP -MF $(DEPDIR)/libui_a-capture_ui_utils.Tpo -c -o libui_a-capture_ui_utils.o `test -f 'capture_ui_utils.c' || echo '$(srcdir)/'`capture_ui_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-capture_ui_utils.Tpo $(DEPDIR)/libui_a-capture_ui_utils.Po
#	$(AM_V_CC)source='capture_ui_utils.c' object='libui_a-capture_ui_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-capture_ui_utils.o `test -f 'capture_ui_utils.c' || echo '$(srcdir)/'`capture_ui_utils.c

libui_a-capture_ui_utils.obj: capture_ui_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-capture_ui_utils.obj -MD -MP -MF $(DEPDIR)/libui_a-capture_ui_utils.Tpo -c -o libui_a-capture_ui_utils.obj `if test -f 'capture_ui_utils.c'; then $(CYGPATH_W) 'capture_ui_utils.c'; else $(CYGPATH_W) '$(srcdir)/capture_ui_utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-capture_ui_utils.Tpo $(DEPDIR)/libui_a-capture_ui_utils.Po
#	$(AM_V_CC)source='capture_ui_utils.c' object='libui_a-capture_ui_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-capture_ui_utils.obj `if test -f 'capture_ui_utils.c'; then $(CYGPATH_W) 'capture_ui_utils.c'; else $(CYGPATH_W) '$(srcdir)/capture_ui_utils.c'; fi`

libui_a-console.o: console.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-console.o -MD -MP -MF $(DEPDIR)/libui_a-console.Tpo -c -o libui_a-console.o `test -f 'console.c' || echo '$(srcdir)/'`console.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-console.Tpo $(DEPDIR)/libui_a-console.Po
#	$(AM_V_CC)source='console.c' object='libui_a-console.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-console.o `test -f 'console.c' || echo '$(srcdir)/'`console.c

libui_a-console.obj: console.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-console.obj -MD -MP -MF $(DEPDIR)/libui_a-console.Tpo -c -o libui_a-console.obj `if test -f 'console.c'; then $(CYGPATH_W) 'console.c'; else $(CYGPATH_W) '$(srcdir)/console.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-console.Tpo $(DEPDIR)/libui_a-console.Po
#	$(AM_V_CC)source='console.c' object='libui_a-console.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-console.obj `if test -f 'console.c'; then $(CYGPATH_W) 'console.c'; else $(CYGPATH_W) '$(srcdir)/console.c'; fi`

libui_a-decode_as_utils.o: decode_as_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-decode_as_utils.o -MD -MP -MF $(DEPDIR)/libui_a-decode_as_utils.Tpo -c -o libui_a-decode_as_utils.o `test -f 'decode_as_utils.c' || echo '$(srcdir)/'`decode_as_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-decode_as_utils.Tpo $(DEPDIR)/libui_a-decode_as_utils.Po
#	$(AM_V_CC)source='decode_as_utils.c' object='libui_a-decode_as_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-decode_as_utils.o `test -f 'decode_as_utils.c' || echo '$(srcdir)/'`decode_as_utils.c

libui_a-decode_as_utils.obj: decode_as_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-decode_as_utils.obj -MD -MP -MF $(DEPDIR)/libui_a-decode_as_utils.Tpo -c -o libui_a-decode_as_utils.obj `if test -f 'decode_as_utils.c'; then $(CYGPATH_W) 'decode_as_utils.c'; else $(CYGPATH_W) '$(srcdir)/decode_as_utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-decode_as_utils.Tpo $(DEPDIR)/libui_a-decode_as_utils.Po
#	$(AM_V_CC)source='decode_as_utils.c' object='libui_a-decode_as_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-decode_as_utils.obj `if test -f 'decode_as_utils.c'; then $(CYGPATH_W) 'decode_as_utils.c'; else $(CYGPATH_W) '$(srcdir)/decode_as_utils.c'; fi`

libui_a-export_object.o: export_object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-export_object.o -MD -MP -MF $(DEPDIR)/libui_a-export_object.Tpo -c -o libui_a-export_object.o `test -f 'export_object.c' || echo '$(srcdir)/'`export_object.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-export_object.Tpo $(DEPDIR)/libui_a-export_object.Po
#	$(AM_V_CC)source='export_object.c' object='libui_a-export_object.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-export_object.o `test -f 'export_object.c' || echo '$(srcdir)/'`export_object.c

libui_a-export_object.obj: export_object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-export_object.obj -MD -MP -MF $(DEPDIR)/libui_a-export_object.Tpo -c -o libui_a-export_object.obj `if test -f 'export_object.c'; then $(CYGPATH_W) 'export_object.c'; else $(CYGPATH_W) '$(srcdir)/export_object.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-export_object.Tpo $(DEPDIR)/libui_a-export_object.Po
#	$(AM_V_CC)source='export_object.c' object='libui_a-export_object.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-export_object.obj `if test -f 'export_object.c'; then $(CYGPATH_W) 'export_object.c'; else $(CYGPATH_W) '$(srcdir)/export_object.c'; fi`

libui_a-export_object_dicom.o: export_object_dicom.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-export_object_dicom.o -MD -MP -MF $(DEPDIR)/libui_a-export_object_dicom.Tpo -c -o libui_a-export_object_dicom.o `test -f 'export_object_dicom.c' || echo '$(srcdir)/'`export_object_dicom.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-export_object_dicom.Tpo $(DEPDIR)/libui_a-export_object_dicom.Po
#	$(AM_V_CC)source='export_object_dicom.c' object='libui_a-export_object_dicom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-export_object_dicom.o `test -f 'export_object_dicom.c' || echo '$(srcdir)/'`export_object_dicom.c

libui_a-export_object_dicom.obj: export_object_dicom.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-export_object_dicom.obj -MD -MP -MF $(DEPDIR)/libui_a-export_object_dicom.Tpo -c -o libui_a-export_object_dicom.obj `if test -f 'export_object_dicom.c'; then $(CYGPATH_W) 'export_object_dicom.c'; else $(CYGPATH_W) '$(srcdir)/export_object_dicom.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-export_object_dicom.Tpo $(DEPDIR)/libui_a-export_object_dicom.Po
#	$(AM_V_CC)source='export_object_dicom.c' object='libui_a-export_object_dicom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-export_object_dicom.obj `if test -f 'export_object_dicom.c'; then $(CYGPATH_W) 'export_object_dicom.c'; else $(CYGPATH_W) '$(srcdir)/export_object_dicom.c'; fi`

libui_a-export_object_http.o: export_object_http.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-export_object_http.o -MD -MP -MF $(DEPDIR)/libui_a-export_object_http.Tpo -c -o libui_a-export_object_http.o `test -f 'export_object_http.c' || echo '$(srcdir)/'`export_object_http.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-export_object_http.Tpo $(DEPDIR)/libui_a-export_object_http.Po
#	$(AM_V_CC)source='export_object_http.c' object='libui_a-export_object_http.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-export_object_http.o `test -f 'export_object_http.c' || echo '$(srcdir)/'`export_object_http.c

libui_a-export_object_http.obj: export_object_http.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-export_object_http.obj -MD -MP -MF $(DEPDIR)/libui_a-export_object_http.Tpo -c -o libui_a-export_object_http.obj `if test -f 'export_object_http.c'; then $(CYGPATH_W) 'export_object_http.c'; else $(CYGPATH_W) '$(srcdir)/export_object_http.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-export_object_http.Tpo $(DEPDIR)/libui_a-export_object_http.Po
#	$(AM_V_CC)source='export_object_http.c' object='libui_a-export_object_http.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-export_object_http.obj `if test -f 'export_object_http.c'; then $(CYGPATH_W) 'export_object_http.c'; else $(CYGPATH_W) '$(srcdir)/export_object_http.c'; fi`

libui_a-export_object_smb.o: export_object_smb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-export_object_smb.o -MD -MP -MF $(DEPDIR)/libui_a-export_object_smb.Tpo -c -o libui_a-export_object_smb.o `test -f 'export_object_smb.c' || echo '$(srcdir)/'`export_object_smb.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-export_object_smb.Tpo $(DEPDIR)/libui_a-export_object_smb.Po
#	$(AM_V_CC)source='export_object_smb.c' object='libui_a-export_object_smb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-export_object_smb.o `test -f 'export_object_smb.c' || echo '$(srcdir)/'`export_object_smb.c

libui_a-export_object_smb.obj: export_object_smb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-export_object_smb.obj -MD -MP -MF $(DEPDIR)/libui_a-export_object_smb.Tpo -c -o libui_a-export_object_smb.obj `if test -f 'export_object_smb.c'; then $(CYGPATH_W) 'export_object_smb.c'; else $(CYGPATH_W) '$(srcdir)/export_object_smb.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-export_object_smb.Tpo $(DEPDIR)/libui_a-export_object_smb.Po
#	$(AM_V_CC)source='export_object_smb.c' object='libui_a-export_object_smb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-export_object_smb.obj `if test -f 'export_object_smb.c'; then $(CYGPATH_W) 'export_object_smb.c'; else $(CYGPATH_W) '$(srcdir)/export_object_smb.c'; fi`

libui_a-export_object_tftp.o: export_object_tftp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-export_object_tftp.o -MD -MP -MF $(DEPDIR)/libui_a-export_object_tftp.Tpo -c -o libui_a-export_object_tftp.o `test -f 'export_object_tftp.c' || echo '$(srcdir)/'`export_object_tftp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-export_object_tftp.Tpo $(DEPDIR)/libui_a-export_object_tftp.Po
#	$(AM_V_CC)source='export_object_tftp.c' object='libui_a-export_object_tftp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-export_object_tftp.o `test -f 'export_object_tftp.c' || echo '$(srcdir)/'`export_object_tftp.c

libui_a-export_object_tftp.obj: export_object_tftp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-export_object_tftp.obj -MD -MP -MF $(DEPDIR)/libui_a-export_object_tftp.Tpo -c -o libui_a-export_object_tftp.obj `if test -f 'export_object_tftp.c'; then $(CYGPATH_W) 'export_object_tftp.c'; else $(CYGPATH_W) '$(srcdir)/export_object_tftp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-export_object_tftp.Tpo $(DEPDIR)/libui_a-export_object_tftp.Po
#	$(AM_V_CC)source='export_object_tftp.c' object='libui_a-export_object_tftp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-export_object_tftp.obj `if test -f 'export_object_tftp.c'; then $(CYGPATH_W) 'export_object_tftp.c'; else $(CYGPATH_W) '$(srcdir)/export_object_tftp.c'; fi`

libui_a-filters.o: filters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-filters.o -MD -MP -MF $(DEPDIR)/libui_a-filters.Tpo -c -o libui_a-filters.o `test -f 'filters.c' || echo '$(srcdir)/'`filters.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-filters.Tpo $(DEPDIR)/libui_a-filters.Po
#	$(AM_V_CC)source='filters.c' object='libui_a-filters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-filters.o `test -f 'filters.c' || echo '$(srcdir)/'`filters.c

libui_a-filters.obj: filters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-filters.obj -MD -MP -MF $(DEPDIR)/libui_a-filters.Tpo -c -o libui_a-filters.obj `if test -f 'filters.c'; then $(CYGPATH_W) 'filters.c'; else $(CYGPATH_W) '$(srcdir)/filters.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-filters.Tpo $(DEPDIR)/libui_a-filters.Po
#	$(AM_V_CC)source='filters.c' object='libui_a-filters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-filters.obj `if test -f 'filters.c'; then $(CYGPATH_W) 'filters.c'; else $(CYGPATH_W) '$(srcdir)/filters.c'; fi`

libui_a-follow.o: follow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-follow.o -MD -MP -MF $(DEPDIR)/libui_a-follow.Tpo -c -o libui_a-follow.o `test -f 'follow.c' || echo '$(srcdir)/'`follow.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-follow.Tpo $(DEPDIR)/libui_a-follow.Po
#	$(AM_V_CC)source='follow.c' object='libui_a-follow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-follow.o `test -f 'follow.c' || echo '$(srcdir)/'`follow.c

libui_a-follow.obj: follow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-follow.obj -MD -MP -MF $(DEPDIR)/libui_a-follow.Tpo -c -o libui_a-follow.obj `if test -f 'follow.c'; then $(CYGPATH_W) 'follow.c'; else $(CYGPATH_W) '$(srcdir)/follow.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-follow.Tpo $(DEPDIR)/libui_a-follow.Po
#	$(AM_V_CC)source='follow.c' object='libui_a-follow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-follow.obj `if test -f 'follow.c'; then $(CYGPATH_W) 'follow.c'; else $(CYGPATH_W) '$(srcdir)/follow.c'; fi`

libui_a-iface_lists.o: iface_lists.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-iface_lists.o -MD -MP -MF $(DEPDIR)/libui_a-iface_lists.Tpo -c -o libui_a-iface_lists.o `test -f 'iface_lists.c' || echo '$(srcdir)/'`iface_lists.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-iface_lists.Tpo $(DEPDIR)/libui_a-iface_lists.Po
#	$(AM_V_CC)source='iface_lists.c' object='libui_a-iface_lists.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-iface_lists.o `test -f 'iface_lists.c' || echo '$(srcdir)/'`iface_lists.c

libui_a-iface_lists.obj: iface_lists.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-iface_lists.obj -MD -MP -MF $(DEPDIR)/libui_a-iface_lists.Tpo -c -o libui_a-iface_lists.obj `if test -f 'iface_lists.c'; then $(CYGPATH_W) 'iface_lists.c'; else $(CYGPATH_W) '$(srcdir)/iface_lists.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-iface_lists.Tpo $(DEPDIR)/libui_a-iface_lists.Po
#	$(AM_V_CC)source='iface_lists.c' object='libui_a-iface_lists.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-iface_lists.obj `if test -f 'iface_lists.c'; then $(CYGPATH_W) 'iface_lists.c'; else $(CYGPATH_W) '$(srcdir)/iface_lists.c'; fi`

libui_a-io_graph_item.o: io_graph_item.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-io_graph_item.o -MD -MP -MF $(DEPDIR)/libui_a-io_graph_item.Tpo -c -o libui_a-io_graph_item.o `test -f 'io_graph_item.c' || echo '$(srcdir)/'`io_graph_item.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-io_graph_item.Tpo $(DEPDIR)/libui_a-io_graph_item.Po
#	$(AM_V_CC)source='io_graph_item.c' object='libui_a-io_graph_item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-io_graph_item.o `test -f 'io_graph_item.c' || echo '$(srcdir)/'`io_graph_item.c

libui_a-io_graph_item.obj: io_graph_item.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-io_graph_item.obj -MD -MP -MF $(DEPDIR)/libui_a-io_graph_item.Tpo -c -o libui_a-io_graph_item.obj `if test -f 'io_graph_item.c'; then $(CYGPATH_W) 'io_graph_item.c'; else $(CYGPATH_W) '$(srcdir)/io_graph_item.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-io_graph_item.Tpo $(DEPDIR)/libui_a-io_graph_item.Po
#	$(AM_V_CC)source='io_graph_item.c' object='libui_a-io_graph_item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-io_graph_item.obj `if test -f 'io_graph_item.c'; then $(CYGPATH_W) 'io_graph_item.c'; else $(CYGPATH_W) '$(srcdir)/io_graph_item.c'; fi`

libui_a-language.o: language.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-language.o -MD -MP -MF $(DEPDIR)/libui_a-language.Tpo -c -o libui_a-language.o `test -f 'language.c' || echo '$(srcdir)/'`language.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-language.Tpo $(DEPDIR)/libui_a-language.Po
#	$(AM_V_CC)source='language.c' object='libui_a-language.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-language.o `test -f 'language.c' || echo '$(srcdir)/'`language.c

libui_a-language.obj: language.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-language.obj -MD -MP -MF $(DEPDIR)/libui_a-language.Tpo -c -o libui_a-language.obj `if test -f 'language.c'; then $(CYGPATH_W) 'language.c'; else $(CYGPATH_W) '$(srcdir)/language.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-language.Tpo $(DEPDIR)/libui_a-language.Po
#	$(AM_V_CC)source='language.c' object='libui_a-language.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-language.obj `if test -f 'language.c'; then $(CYGPATH_W) 'language.c'; else $(CYGPATH_W) '$(srcdir)/language.c'; fi`

libui_a-help_url.o: help_url.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-help_url.o -MD -MP -MF $(DEPDIR)/libui_a-help_url.Tpo -c -o libui_a-help_url.o `test -f 'help_url.c' || echo '$(srcdir)/'`help_url.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-help_url.Tpo $(DEPDIR)/libui_a-help_url.Po
#	$(AM_V_CC)source='help_url.c' object='libui_a-help_url.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-help_url.o `test -f 'help_url.c' || echo '$(srcdir)/'`help_url.c

libui_a-help_url.obj: help_url.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-help_url.obj -MD -MP -MF $(DEPDIR)/libui_a-help_url.Tpo -c -o libui_a-help_url.obj `if test -f 'help_url.c'; then $(CYGPATH_W) 'help_url.c'; else $(CYGPATH_W) '$(srcdir)/help_url.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-help_url.Tpo $(DEPDIR)/libui_a-help_url.Po
#	$(AM_V_CC)source='help_url.c' object='libui_a-help_url.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-help_url.obj `if test -f 'help_url.c'; then $(CYGPATH_W) 'help_url.c'; else $(CYGPATH_W) '$(srcdir)/help_url.c'; fi`

libui_a-mcast_stream.o: mcast_stream.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-mcast_stream.o -MD -MP -MF $(DEPDIR)/libui_a-mcast_stream.Tpo -c -o libui_a-mcast_stream.o `test -f 'mcast_stream.c' || echo '$(srcdir)/'`mcast_stream.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-mcast_stream.Tpo $(DEPDIR)/libui_a-mcast_stream.Po
#	$(AM_V_CC)source='mcast_stream.c' object='libui_a-mcast_stream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-mcast_stream.o `test -f 'mcast_stream.c' || echo '$(srcdir)/'`mcast_stream.c

libui_a-mcast_stream.obj: mcast_stream.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-mcast_stream.obj -MD -MP -MF $(DEPDIR)/libui_a-mcast_stream.Tpo -c -o libui_a-mcast_stream.obj `if test -f 'mcast_stream.c'; then $(CYGPATH_W) 'mcast_stream.c'; else $(CYGPATH_W) '$(srcdir)/mcast_stream.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-mcast_stream.Tpo $(DEPDIR)/libui_a-mcast_stream.Po
#	$(AM_V_CC)source='mcast_stream.c' object='libui_a-mcast_stream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-mcast_stream.obj `if test -f 'mcast_stream.c'; then $(CYGPATH_W) 'mcast_stream.c'; else $(CYGPATH_W) '$(srcdir)/mcast_stream.c'; fi`

libui_a-packet_list_utils.o: packet_list_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-packet_list_utils.o -MD -MP -MF $(DEPDIR)/libui_a-packet_list_utils.Tpo -c -o libui_a-packet_list_utils.o `test -f 'packet_list_utils.c' || echo '$(srcdir)/'`packet_list_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-packet_list_utils.Tpo $(DEPDIR)/libui_a-packet_list_utils.Po
#	$(AM_V_CC)source='packet_list_utils.c' object='libui_a-packet_list_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-packet_list_utils.o `test -f 'packet_list_utils.c' || echo '$(srcdir)/'`packet_list_utils.c

libui_a-packet_list_utils.obj: packet_list_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-packet_list_utils.obj -MD -MP -MF $(DEPDIR)/libui_a-packet_list_utils.Tpo -c -o libui_a-packet_list_utils.obj `if test -f 'packet_list_utils.c'; then $(CYGPATH_W) 'packet_list_utils.c'; else $(CYGPATH_W) '$(srcdir)/packet_list_utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-packet_list_utils.Tpo $(DEPDIR)/libui_a-packet_list_utils.Po
#	$(AM_V_CC)source='packet_list_utils.c' object='libui_a-packet_list_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-packet_list_utils.obj `if test -f 'packet_list_utils.c'; then $(CYGPATH_W) 'packet_list_utils.c'; else $(CYGPATH_W) '$(srcdir)/packet_list_utils.c'; fi`

libui_a-persfilepath_opt.o: persfilepath_opt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-persfilepath_opt.o -MD -MP -MF $(DEPDIR)/libui_a-persfilepath_opt.Tpo -c -o libui_a-persfilepath_opt.o `test -f 'persfilepath_opt.c' || echo '$(srcdir)/'`persfilepath_opt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-persfilepath_opt.Tpo $(DEPDIR)/libui_a-persfilepath_opt.Po
#	$(AM_V_CC)source='persfilepath_opt.c' object='libui_a-persfilepath_opt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-persfilepath_opt.o `test -f 'persfilepath_opt.c' || echo '$(srcdir)/'`persfilepath_opt.c

libui_a-persfilepath_opt.obj: persfilepath_opt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-persfilepath_opt.obj -MD -MP -MF $(DEPDIR)/libui_a-persfilepath_opt.Tpo -c -o libui_a-persfilepath_opt.obj `if test -f 'persfilepath_opt.c'; then $(CYGPATH_W) 'persfilepath_opt.c'; else $(CYGPATH_W) '$(srcdir)/persfilepath_opt.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-persfilepath_opt.Tpo $(DEPDIR)/libui_a-persfilepath_opt.Po
#	$(AM_V_CC)source='persfilepath_opt.c' object='libui_a-persfilepath_opt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-persfilepath_opt.obj `if test -f 'persfilepath_opt.c'; then $(CYGPATH_W) 'persfilepath_opt.c'; else $(CYGPATH_W) '$(srcdir)/persfilepath_opt.c'; fi`

libui_a-preference_utils.o: preference_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-preference_utils.o -MD -MP -MF $(DEPDIR)/libui_a-preference_utils.Tpo -c -o libui_a-preference_utils.o `test -f 'preference_utils.c' || echo '$(srcdir)/'`preference_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-preference_utils.Tpo $(DEPDIR)/libui_a-preference_utils.Po
#	$(AM_V_CC)source='preference_utils.c' object='libui_a-preference_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-preference_utils.o `test -f 'preference_utils.c' || echo '$(srcdir)/'`preference_utils.c

libui_a-preference_utils.obj: preference_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-preference_utils.obj -MD -MP -MF $(DEPDIR)/libui_a-preference_utils.Tpo -c -o libui_a-preference_utils.obj `if test -f 'preference_utils.c'; then $(CYGPATH_W) 'preference_utils.c'; else $(CYGPATH_W) '$(srcdir)/preference_utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-preference_utils.Tpo $(DEPDIR)/libui_a-preference_utils.Po
#	$(AM_V_CC)source='preference_utils.c' object='libui_a-preference_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-preference_utils.obj `if test -f 'preference_utils.c'; then $(CYGPATH_W) 'preference_utils.c'; else $(CYGPATH_W) '$(srcdir)/preference_utils.c'; fi`

libui_a-profile.o: profile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-profile.o -MD -MP -MF $(DEPDIR)/libui_a-profile.Tpo -c -o libui_a-profile.o `test -f 'profile.c' || echo '$(srcdir)/'`profile.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-profile.Tpo $(DEPDIR)/libui_a-profile.Po
#	$(AM_V_CC)source='profile.c' object='libui_a-profile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-profile.o `test -f 'profile.c' || echo '$(srcdir)/'`profile.c

libui_a-profile.obj: profile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-profile.obj -MD -MP -MF $(DEPDIR)/libui_a-profile.Tpo -c -o libui_a-profile.obj `if test -f 'profile.c'; then $(CYGPATH_W) 'profile.c'; else $(CYGPATH_W) '$(srcdir)/profile.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-profile.Tpo $(DEPDIR)/libui_a-profile.Po
#	$(AM_V_CC)source='profile.c' object='libui_a-profile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-profile.obj `if test -f 'profile.c'; then $(CYGPATH_W) 'profile.c'; else $(CYGPATH_W) '$(srcdir)/profile.c'; fi`

libui_a-proto_hier_stats.o: proto_hier_stats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-proto_hier_stats.o -MD -MP -MF $(DEPDIR)/libui_a-proto_hier_stats.Tpo -c -o libui_a-proto_hier_stats.o `test -f 'proto_hier_stats.c' || echo '$(srcdir)/'`proto_hier_stats.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-proto_hier_stats.Tpo $(DEPDIR)/libui_a-proto_hier_stats.Po
#	$(AM_V_CC)source='proto_hier_stats.c' object='libui_a-proto_hier_stats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-proto_hier_stats.o `test -f 'proto_hier_stats.c' || echo '$(srcdir)/'`proto_hier_stats.c

libui_a-proto_hier_stats.obj: proto_hier_stats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-proto_hier_stats.obj -MD -MP -MF $(DEPDIR)/libui_a-proto_hier_stats.Tpo -c -o libui_a-proto_hier_stats.obj `if test -f 'proto_hier_stats.c'; then $(CYGPATH_W) 'proto_hier_stats.c'; else $(CYGPATH_W) '$(srcdir)/proto_hier_stats.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-proto_hier_stats.Tpo $(DEPDIR)/libui_a-proto_hier_stats.Po
#	$(AM_V_CC)source='proto_hier_stats.c' object='libui_a-proto_hier_stats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-proto_hier_stats.obj `if test -f 'proto_hier_stats.c'; then $(CYGPATH_W) 'proto_hier_stats.c'; else $(CYGPATH_W) '$(srcdir)/proto_hier_stats.c'; fi`

libui_a-recent.o: recent.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-recent.o -MD -MP -MF $(DEPDIR)/libui_a-recent.Tpo -c -o libui_a-recent.o `test -f 'recent.c' || echo '$(srcdir)/'`recent.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-recent.Tpo $(DEPDIR)/libui_a-recent.Po
#	$(AM_V_CC)source='recent.c' object='libui_a-recent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-recent.o `test -f 'recent.c' || echo '$(srcdir)/'`recent.c

libui_a-recent.obj: recent.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-recent.obj -MD -MP -MF $(DEPDIR)/libui_a-recent.Tpo -c -o libui_a-recent.obj `if test -f 'recent.c'; then $(CYGPATH_W) 'recent.c'; else $(CYGPATH_W) '$(srcdir)/recent.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-recent.Tpo $(DEPDIR)/libui_a-recent.Po
#	$(AM_V_CC)source='recent.c' object='libui_a-recent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-recent.obj `if test -f 'recent.c'; then $(CYGPATH_W) 'recent.c'; else $(CYGPATH_W) '$(srcdir)/recent.c'; fi`

libui_a-rtp_media.o: rtp_media.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-rtp_media.o -MD -MP -MF $(DEPDIR)/libui_a-rtp_media.Tpo -c -o libui_a-rtp_media.o `test -f 'rtp_media.c' || echo '$(srcdir)/'`rtp_media.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-rtp_media.Tpo $(DEPDIR)/libui_a-rtp_media.Po
#	$(AM_V_CC)source='rtp_media.c' object='libui_a-rtp_media.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-rtp_media.o `test -f 'rtp_media.c' || echo '$(srcdir)/'`rtp_media.c

libui_a-rtp_media.obj: rtp_media.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-rtp_media.obj -MD -MP -MF $(DEPDIR)/libui_a-rtp_media.Tpo -c -o libui_a-rtp_media.obj `if test -f 'rtp_media.c'; then $(CYGPATH_W) 'rtp_media.c'; else $(CYGPATH_W) '$(srcdir)/rtp_media.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-rtp_media.Tpo $(DEPDIR)/libui_a-rtp_media.Po
#	$(AM_V_CC)source='rtp_media.c' object='libui_a-rtp_media.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-rtp_media.obj `if test -f 'rtp_media.c'; then $(CYGPATH_W) 'rtp_media.c'; else $(CYGPATH_W) '$(srcdir)/rtp_media.c'; fi`

libui_a-rtp_stream.o: rtp_stream.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-rtp_stream.o -MD -MP -MF $(DEPDIR)/libui_a-rtp_stream.Tpo -c -o libui_a-rtp_stream.o `test -f 'rtp_stream.c' || echo '$(srcdir)/'`rtp_stream.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-rtp_stream.Tpo $(DEPDIR)/libui_a-rtp_stream.Po
#	$(AM_V_CC)source='rtp_stream.c' object='libui_a-rtp_stream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-rtp_stream.o `test -f 'rtp_stream.c' || echo '$(srcdir)/'`rtp_stream.c

libui_a-rtp_stream.obj: rtp_stream.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-rtp_stream.obj -MD -MP -MF $(DEPDIR)/libui_a-rtp_stream.Tpo -c -o libui_a-rtp_stream.obj `if test -f 'rtp_stream.c'; then $(CYGPATH_W) 'rtp_stream.c'; else $(CYGPATH_W) '$(srcdir)/rtp_stream.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-rtp_stream.Tpo $(DEPDIR)/libui_a-rtp_stream.Po
#	$(AM_V_CC)source='rtp_stream.c' object='libui_a-rtp_stream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-rtp_stream.obj `if test -f 'rtp_stream.c'; then $(CYGPATH_W) 'rtp_stream.c'; else $(CYGPATH_W) '$(srcdir)/rtp_stream.c'; fi`

libui_a-service_response_time.o: service_response_time.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-service_response_time.o -MD -MP -MF $(DEPDIR)/libui_a-service_response_time.Tpo -c -o libui_a-service_response_time.o `test -f 'service_response_time.c' || echo '$(srcdir)/'`service_response_time.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-service_response_time.Tpo $(DEPDIR)/libui_a-service_response_time.Po
#	$(AM_V_CC)source='service_response_time.c' object='libui_a-service_response_time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-service_response_time.o `test -f 'service_response_time.c' || echo '$(srcdir)/'`service_response_time.c

libui_a-service_response_time.obj: service_response_time.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-service_response_time.obj -MD -MP -MF $(DEPDIR)/libui_a-service_response_time.Tpo -c -o libui_a-service_response_time.obj `if test -f 'service_response_time.c'; then $(CYGPATH_W) 'service_response_time.c'; else $(CYGPATH_W) '$(srcdir)/service_response_time.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-service_response_time.Tpo $(DEPDIR)/libui_a-service_response_time.Po
#	$(AM_V_CC)source='service_response_time.c' object='libui_a-service_response_time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-service_response_time.obj `if test -f 'service_response_time.c'; then $(CYGPATH_W) 'service_response_time.c'; else $(CYGPATH_W) '$(srcdir)/service_response_time.c'; fi`

libui_a-software_update.o: software_update.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-software_update.o -MD -MP -MF $(DEPDIR)/libui_a-software_update.Tpo -c -o libui_a-software_update.o `test -f 'software_update.c' || echo '$(srcdir)/'`software_update.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-software_update.Tpo $(DEPDIR)/libui_a-software_update.Po
#	$(AM_V_CC)source='software_update.c' object='libui_a-software_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-software_update.o `test -f 'software_update.c' || echo '$(srcdir)/'`software_update.c

libui_a-software_update.obj: software_update.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-software_update.obj -MD -MP -MF $(DEPDIR)/libui_a-software_update.Tpo -c -o libui_a-software_update.obj `if test -f 'software_update.c'; then $(CYGPATH_W) 'software_update.c'; else $(CYGPATH_W) '$(srcdir)/software_update.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-software_update.Tpo $(DEPDIR)/libui_a-software_update.Po
#	$(AM_V_CC)source='software_update.c' object='libui_a-software_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-software_update.obj `if test -f 'software_update.c'; then $(CYGPATH_W) 'software_update.c'; else $(CYGPATH_W) '$(srcdir)/software_update.c'; fi`

libui_a-ssl_key_export.o: ssl_key_export.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-ssl_key_export.o -MD -MP -MF $(DEPDIR)/libui_a-ssl_key_export.Tpo -c -o libui_a-ssl_key_export.o `test -f 'ssl_key_export.c' || echo '$(srcdir)/'`ssl_key_export.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-ssl_key_export.Tpo $(DEPDIR)/libui_a-ssl_key_export.Po
#	$(AM_V_CC)source='ssl_key_export.c' object='libui_a-ssl_key_export.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-ssl_key_export.o `test -f 'ssl_key_export.c' || echo '$(srcdir)/'`ssl_key_export.c

libui_a-ssl_key_export.obj: ssl_key_export.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-ssl_key_export.obj -MD -MP -MF $(DEPDIR)/libui_a-ssl_key_export.Tpo -c -o libui_a-ssl_key_export.obj `if test -f 'ssl_key_export.c'; then $(CYGPATH_W) 'ssl_key_export.c'; else $(CYGPATH_W) '$(srcdir)/ssl_key_export.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-ssl_key_export.Tpo $(DEPDIR)/libui_a-ssl_key_export.Po
#	$(AM_V_CC)source='ssl_key_export.c' object='libui_a-ssl_key_export.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-ssl_key_export.obj `if test -f 'ssl_key_export.c'; then $(CYGPATH_W) 'ssl_key_export.c'; else $(CYGPATH_W) '$(srcdir)/ssl_key_export.c'; fi`

libui_a-tap_export_pdu.o: tap_export_pdu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap_export_pdu.o -MD -MP -MF $(DEPDIR)/libui_a-tap_export_pdu.Tpo -c -o libui_a-tap_export_pdu.o `test -f 'tap_export_pdu.c' || echo '$(srcdir)/'`tap_export_pdu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap_export_pdu.Tpo $(DEPDIR)/libui_a-tap_export_pdu.Po
#	$(AM_V_CC)source='tap_export_pdu.c' object='libui_a-tap_export_pdu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap_export_pdu.o `test -f 'tap_export_pdu.c' || echo '$(srcdir)/'`tap_export_pdu.c

libui_a-tap_export_pdu.obj: tap_export_pdu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap_export_pdu.obj -MD -MP -MF $(DEPDIR)/libui_a-tap_export_pdu.Tpo -c -o libui_a-tap_export_pdu.obj `if test -f 'tap_export_pdu.c'; then $(CYGPATH_W) 'tap_export_pdu.c'; else $(CYGPATH_W) '$(srcdir)/tap_export_pdu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap_export_pdu.Tpo $(DEPDIR)/libui_a-tap_export_pdu.Po
#	$(AM_V_CC)source='tap_export_pdu.c' object='libui_a-tap_export_pdu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap_export_pdu.obj `if test -f 'tap_export_pdu.c'; then $(CYGPATH_W) 'tap_export_pdu.c'; else $(CYGPATH_W) '$(srcdir)/tap_export_pdu.c'; fi`

libui_a-tap-iax2-analysis.o: tap-iax2-analysis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-iax2-analysis.o -MD -MP -MF $(DEPDIR)/libui_a-tap-iax2-analysis.Tpo -c -o libui_a-tap-iax2-analysis.o `test -f 'tap-iax2-analysis.c' || echo '$(srcdir)/'`tap-iax2-analysis.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-iax2-analysis.Tpo $(DEPDIR)/libui_a-tap-iax2-analysis.Po
#	$(AM_V_CC)source='tap-iax2-analysis.c' object='libui_a-tap-iax2-analysis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-iax2-analysis.o `test -f 'tap-iax2-analysis.c' || echo '$(srcdir)/'`tap-iax2-analysis.c

libui_a-tap-iax2-analysis.obj: tap-iax2-analysis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-iax2-analysis.obj -MD -MP -MF $(DEPDIR)/libui_a-tap-iax2-analysis.Tpo -c -o libui_a-tap-iax2-analysis.obj `if test -f 'tap-iax2-analysis.c'; then $(CYGPATH_W) 'tap-iax2-analysis.c'; else $(CYGPATH_W) '$(srcdir)/tap-iax2-analysis.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-iax2-analysis.Tpo $(DEPDIR)/libui_a-tap-iax2-analysis.Po
#	$(AM_V_CC)source='tap-iax2-analysis.c' object='libui_a-tap-iax2-analysis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-iax2-analysis.obj `if test -f 'tap-iax2-analysis.c'; then $(CYGPATH_W) 'tap-iax2-analysis.c'; else $(CYGPATH_W) '$(srcdir)/tap-iax2-analysis.c'; fi`

libui_a-tap-rlc-graph.o: tap-rlc-graph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-rlc-graph.o -MD -MP -MF $(DEPDIR)/libui_a-tap-rlc-graph.Tpo -c -o libui_a-tap-rlc-graph.o `test -f 'tap-rlc-graph.c' || echo '$(srcdir)/'`tap-rlc-graph.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-rlc-graph.Tpo $(DEPDIR)/libui_a-tap-rlc-graph.Po
#	$(AM_V_CC)source='tap-rlc-graph.c' object='libui_a-tap-rlc-graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-rlc-graph.o `test -f 'tap-rlc-graph.c' || echo '$(srcdir)/'`tap-rlc-graph.c

libui_a-tap-rlc-graph.obj: tap-rlc-graph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-rlc-graph.obj -MD -MP -MF $(DEPDIR)/libui_a-tap-rlc-graph.Tpo -c -o libui_a-tap-rlc-graph.obj `if test -f 'tap-rlc-graph.c'; then $(CYGPATH_W) 'tap-rlc-graph.c'; else $(CYGPATH_W) '$(srcdir)/tap-rlc-graph.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-rlc-graph.Tpo $(DEPDIR)/libui_a-tap-rlc-graph.Po
#	$(AM_V_CC)source='tap-rlc-graph.c' object='libui_a-tap-rlc-graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-rlc-graph.obj `if test -f 'tap-rlc-graph.c'; then $(CYGPATH_W) 'tap-rlc-graph.c'; else $(CYGPATH_W) '$(srcdir)/tap-rlc-graph.c'; fi`

libui_a-tap-rtp-common.o: tap-rtp-common.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-rtp-common.o -MD -MP -MF $(DEPDIR)/libui_a-tap-rtp-common.Tpo -c -o libui_a-tap-rtp-common.o `test -f 'tap-rtp-common.c' || echo '$(srcdir)/'`tap-rtp-common.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-rtp-common.Tpo $(DEPDIR)/libui_a-tap-rtp-common.Po
#	$(AM_V_CC)source='tap-rtp-common.c' object='libui_a-tap-rtp-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-rtp-common.o `test -f 'tap-rtp-common.c' || echo '$(srcdir)/'`tap-rtp-common.c

libui_a-tap-rtp-common.obj: tap-rtp-common.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-rtp-common.obj -MD -MP -MF $(DEPDIR)/libui_a-tap-rtp-common.Tpo -c -o libui_a-tap-rtp-common.obj `if test -f 'tap-rtp-common.c'; then $(CYGPATH_W) 'tap-rtp-common.c'; else $(CYGPATH_W) '$(srcdir)/tap-rtp-common.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-rtp-common.Tpo $(DEPDIR)/libui_a-tap-rtp-common.Po
#	$(AM_V_CC)source='tap-rtp-common.c' object='libui_a-tap-rtp-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-rtp-common.obj `if test -f 'tap-rtp-common.c'; then $(CYGPATH_W) 'tap-rtp-common.c'; else $(CYGPATH_W) '$(srcdir)/tap-rtp-common.c'; fi`

libui_a-tap-sctp-analysis.o: tap-sctp-analysis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-sctp-analysis.o -MD -MP -MF $(DEPDIR)/libui_a-tap-sctp-analysis.Tpo -c -o libui_a-tap-sctp-analysis.o `test -f 'tap-sctp-analysis.c' || echo '$(srcdir)/'`tap-sctp-analysis.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-sctp-analysis.Tpo $(DEPDIR)/libui_a-tap-sctp-analysis.Po
#	$(AM_V_CC)source='tap-sctp-analysis.c' object='libui_a-tap-sctp-analysis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-sctp-analysis.o `test -f 'tap-sctp-analysis.c' || echo '$(srcdir)/'`tap-sctp-analysis.c

libui_a-tap-sctp-analysis.obj: tap-sctp-analysis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-sctp-analysis.obj -MD -MP -MF $(DEPDIR)/libui_a-tap-sctp-analysis.Tpo -c -o libui_a-tap-sctp-analysis.obj `if test -f 'tap-sctp-analysis.c'; then $(CYGPATH_W) 'tap-sctp-analysis.c'; else $(CYGPATH_W) '$(srcdir)/tap-sctp-analysis.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-sctp-analysis.Tpo $(DEPDIR)/libui_a-tap-sctp-analysis.Po
#	$(AM_V_CC)source='tap-sctp-analysis.c' object='libui_a-tap-sctp-analysis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-sctp-analysis.obj `if test -f 'tap-sctp-analysis.c'; then $(CYGPATH_W) 'tap-sctp-analysis.c'; else $(CYGPATH_W) '$(srcdir)/tap-sctp-analysis.c'; fi`

libui_a-tap-sequence-analysis.o: tap-sequence-analysis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-sequence-analysis.o -MD -MP -MF $(DEPDIR)/libui_a-tap-sequence-analysis.Tpo -c -o libui_a-tap-sequence-analysis.o `test -f 'tap-sequence-analysis.c' || echo '$(srcdir)/'`tap-sequence-analysis.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-sequence-analysis.Tpo $(DEPDIR)/libui_a-tap-sequence-analysis.Po
#	$(AM_V_CC)source='tap-sequence-analysis.c' object='libui_a-tap-sequence-analysis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-sequence-analysis.o `test -f 'tap-sequence-analysis.c' || echo '$(srcdir)/'`tap-sequence-analysis.c

libui_a-tap-sequence-analysis.obj: tap-sequence-analysis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-sequence-analysis.obj -MD -MP -MF $(DEPDIR)/libui_a-tap-sequence-analysis.Tpo -c -o libui_a-tap-sequence-analysis.obj `if test -f 'tap-sequence-analysis.c'; then $(CYGPATH_W) 'tap-sequence-analysis.c'; else $(CYGPATH_W) '$(srcdir)/tap-sequence-analysis.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-sequence-analysis.Tpo $(DEPDIR)/libui_a-tap-sequence-analysis.Po
#	$(AM_V_CC)source='tap-sequence-analysis.c' object='libui_a-tap-sequence-analysis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-sequence-analysis.obj `if test -f 'tap-sequence-analysis.c'; then $(CYGPATH_W) 'tap-sequence-analysis.c'; else $(CYGPATH_W) '$(srcdir)/tap-sequence-analysis.c'; fi`

libui_a-tap-tcp-stream.o: tap-tcp-stream.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-tcp-stream.o -MD -MP -MF $(DEPDIR)/libui_a-tap-tcp-stream.Tpo -c -o libui_a-tap-tcp-stream.o `test -f 'tap-tcp-stream.c' || echo '$(srcdir)/'`tap-tcp-stream.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-tcp-stream.Tpo $(DEPDIR)/libui_a-tap-tcp-stream.Po
#	$(AM_V_CC)source='tap-tcp-stream.c' object='libui_a-tap-tcp-stream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-tcp-stream.o `test -f 'tap-tcp-stream.c' || echo '$(srcdir)/'`tap-tcp-stream.c

libui_a-tap-tcp-stream.obj: tap-tcp-stream.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-tap-tcp-stream.obj -MD -MP -MF $(DEPDIR)/libui_a-tap-tcp-stream.Tpo -c -o libui_a-tap-tcp-stream.obj `if test -f 'tap-tcp-stream.c'; then $(CYGPATH_W) 'tap-tcp-stream.c'; else $(CYGPATH_W) '$(srcdir)/tap-tcp-stream.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-tap-tcp-stream.Tpo $(DEPDIR)/libui_a-tap-tcp-stream.Po
#	$(AM_V_CC)source='tap-tcp-stream.c' object='libui_a-tap-tcp-stream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-tap-tcp-stream.obj `if test -f 'tap-tcp-stream.c'; then $(CYGPATH_W) 'tap-tcp-stream.c'; else $(CYGPATH_W) '$(srcdir)/tap-tcp-stream.c'; fi`

libui_a-text_import.o: text_import.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-text_import.o -MD -MP -MF $(DEPDIR)/libui_a-text_import.Tpo -c -o libui_a-text_import.o `test -f 'text_import.c' || echo '$(srcdir)/'`text_import.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-text_import.Tpo $(DEPDIR)/libui_a-text_import.Po
#	$(AM_V_CC)source='text_import.c' object='libui_a-text_import.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-text_import.o `test -f 'text_import.c' || echo '$(srcdir)/'`text_import.c

libui_a-text_import.obj: text_import.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-text_import.obj -MD -MP -MF $(DEPDIR)/libui_a-text_import.Tpo -c -o libui_a-text_import.obj `if test -f 'text_import.c'; then $(CYGPATH_W) 'text_import.c'; else $(CYGPATH_W) '$(srcdir)/text_import.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-text_import.Tpo $(DEPDIR)/libui_a-text_import.Po
#	$(AM_V_CC)source='text_import.c' object='libui_a-text_import.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-text_import.obj `if test -f 'text_import.c'; then $(CYGPATH_W) 'text_import.c'; else $(CYGPATH_W) '$(srcdir)/text_import.c'; fi`

libui_a-time_shift.o: time_shift.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-time_shift.o -MD -MP -MF $(DEPDIR)/libui_a-time_shift.Tpo -c -o libui_a-time_shift.o `test -f 'time_shift.c' || echo '$(srcdir)/'`time_shift.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-time_shift.Tpo $(DEPDIR)/libui_a-time_shift.Po
#	$(AM_V_CC)source='time_shift.c' object='libui_a-time_shift.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-time_shift.o `test -f 'time_shift.c' || echo '$(srcdir)/'`time_shift.c

libui_a-time_shift.obj: time_shift.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-time_shift.obj -MD -MP -MF $(DEPDIR)/libui_a-time_shift.Tpo -c -o libui_a-time_shift.obj `if test -f 'time_shift.c'; then $(CYGPATH_W) 'time_shift.c'; else $(CYGPATH_W) '$(srcdir)/time_shift.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-time_shift.Tpo $(DEPDIR)/libui_a-time_shift.Po
#	$(AM_V_CC)source='time_shift.c' object='libui_a-time_shift.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-time_shift.obj `if test -f 'time_shift.c'; then $(CYGPATH_W) 'time_shift.c'; else $(CYGPATH_W) '$(srcdir)/time_shift.c'; fi`

libui_a-traffic_table_ui.o: traffic_table_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-traffic_table_ui.o -MD -MP -MF $(DEPDIR)/libui_a-traffic_table_ui.Tpo -c -o libui_a-traffic_table_ui.o `test -f 'traffic_table_ui.c' || echo '$(srcdir)/'`traffic_table_ui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-traffic_table_ui.Tpo $(DEPDIR)/libui_a-traffic_table_ui.Po
#	$(AM_V_CC)source='traffic_table_ui.c' object='libui_a-traffic_table_ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-traffic_table_ui.o `test -f 'traffic_table_ui.c' || echo '$(srcdir)/'`traffic_table_ui.c

libui_a-traffic_table_ui.obj: traffic_table_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-traffic_table_ui.obj -MD -MP -MF $(DEPDIR)/libui_a-traffic_table_ui.Tpo -c -o libui_a-traffic_table_ui.obj `if test -f 'traffic_table_ui.c'; then $(CYGPATH_W) 'traffic_table_ui.c'; else $(CYGPATH_W) '$(srcdir)/traffic_table_ui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-traffic_table_ui.Tpo $(DEPDIR)/libui_a-traffic_table_ui.Po
#	$(AM_V_CC)source='traffic_table_ui.c' object='libui_a-traffic_table_ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-traffic_table_ui.obj `if test -f 'traffic_table_ui.c'; then $(CYGPATH_W) 'traffic_table_ui.c'; else $(CYGPATH_W) '$(srcdir)/traffic_table_ui.c'; fi`

libui_a-util.o: util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-util.o -MD -MP -MF $(DEPDIR)/libui_a-util.Tpo -c -o libui_a-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-util.Tpo $(DEPDIR)/libui_a-util.Po
#	$(AM_V_CC)source='util.c' object='libui_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c

libui_a-util.obj: util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-util.obj -MD -MP -MF $(DEPDIR)/libui_a-util.Tpo -c -o libui_a-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-util.Tpo $(DEPDIR)/libui_a-util.Po
#	$(AM_V_CC)source='util.c' object='libui_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`

libui_a-voip_calls.o: voip_calls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-voip_calls.o -MD -MP -MF $(DEPDIR)/libui_a-voip_calls.Tpo -c -o libui_a-voip_calls.o `test -f 'voip_calls.c' || echo '$(srcdir)/'`voip_calls.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-voip_calls.Tpo $(DEPDIR)/libui_a-voip_calls.Po
#	$(AM_V_CC)source='voip_calls.c' object='libui_a-voip_calls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-voip_calls.o `test -f 'voip_calls.c' || echo '$(srcdir)/'`voip_calls.c

libui_a-voip_calls.obj: voip_calls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -MT libui_a-voip_calls.obj -MD -MP -MF $(DEPDIR)/libui_a-voip_calls.Tpo -c -o libui_a-voip_calls.obj `if test -f 'voip_calls.c'; then $(CYGPATH_W) 'voip_calls.c'; else $(CYGPATH_W) '$(srcdir)/voip_calls.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libui_a-voip_calls.Tpo $(DEPDIR)/libui_a-voip_calls.Po
#	$(AM_V_CC)source='voip_calls.c' object='libui_a-voip_calls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libui_a_CFLAGS) $(CFLAGS) -c -o libui_a-voip_calls.obj `if test -f 'voip_calls.c'; then $(CYGPATH_W) 'voip_calls.c'; else $(CYGPATH_W) '$(srcdir)/voip_calls.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


.l.c:
	$(AM_V_RUNLEX)$(RUNLEX) "$(LEX)" "$(SED)" -o$@ $<

.def.sym:
	$(AM_V_AWK)$(AWK) '/^EXPORTS$$/ {next;}; ${def_sym_filter_symbols} /^[^;]/ { print $$1;}' < $< > $@
abi-descriptor.xml: ../abi-descriptor.template
	$(AM_V_SED)sed "s|@INCLUDE_DIRS@|$(INCLUDE_DIRS)|g;s/NEWLINE/\n    /g;s|@LIBRARY_OUTPUT_PATH@|{RELPATH}/.libs|" $< > $@

text_import_scanner_lex.h: text_import_scanner.c

doxygen:
#	$(DOXYGEN) doxygen.cfg

wsar_html: doxygen.cfg ../doxygen_global.cfg
#	(umask 022 ; $(DOXYGEN) doxygen.cfg)

checkapi: checkapi-base checkapi-todo

checkapi-base:
	$(PERL) $(top_srcdir)/tools/checkAPIs.pl -g deprecated-gtk -build \
	-sourcedir=$(srcdir) \
	$(WIRESHARK_UI_SRC)

checkapi-todo:
	$(PERL) $(top_srcdir)/tools/checkAPIs.pl -M -g deprecated-gtk-todo -build \
	-sourcedir=$(srcdir) \
	$(WIRESHARK_UI_SRC)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
